{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","helpers/filterItems.js","helpers/filterTest.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/initialState.js","redux/contacts/contactsReducer.js","redux/contacts/contacts-persistor.js","redux/store.js","redux/middleware.js","index.js"],"names":["module","exports","contactsAction","createAction","name","number","payload","id","uuidv4","filterAction","deleteActions","getContacts","contacts","items","getFilter","filter","getContactsWithFilter","data","test","slice","length","toLowerCase","testFunc","ContactForm","inputIdName","useRef","inputIdNumber","useState","newName","setNewName","setNumber","useSelector","dispatch","useDispatch","className","style","Form","onSubmit","e","preventDefault","trim","some","toast","error","success","info","htmlFor","current","Label","Input","type","value","onChange","target","AddBtn","Button","variant","color","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ContactList","map","styles","Item","Text","onClick","onDeleteElement","Filter","inputId","React","App","initialState","createReducer","state","contact","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","contactsPersistor","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8310e4f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2HicR\",\"AddBtn\":\"ContactForm_AddBtn__2xKH-\",\"Item\":\"ContactForm_Item__3OaPX\",\"Label\":\"ContactForm_Label__2AU9F\",\"Input\":\"ContactForm_Input__2rnoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__KTNUk\",\"Item\":\"ContactList_Item__gX1q6\",\"Text\":\"ContactList_Text__179V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__386LO\",\"Input\":\"Filter_Input__3EdFu\",\"Item\":\"Filter_Item__2hsYa\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const contactsAction = createAction(\n  'contacts/addContact',\n  ({ name, number }) => ({\n    payload: { id: uuidv4(), name, number },\n  }),\n);\n\nexport const filterAction = createAction('contacts/filter');\nexport const deleteActions = createAction('contacts/deleteContact');\n","import { filterItems } from '../../helpers/filterItems';\nexport const getContacts = ({ contacts }) => contacts.items;\nexport const getFilter = ({ contacts }) => contacts.filter;\nexport const getContactsWithFilter = data =>\n  filterItems(getContacts(data), getFilter(data));\n","import { testFunc } from './filterTest';\n\nexport function filterItems(items, filter) {\n  if (filter === '') return items;\n  return items.filter(({ name }) => testFunc(filter, name));\n}\n","export function testFunc(filter, name) {\n  const test = name.slice(0, filter.length);\n  return filter.toLowerCase() === test.toLowerCase();\n}\n","import React, { useState, useRef } from 'react';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@material-ui/core/Button';\nimport {\n  contactsAction,\n  filterAction,\n} from '../../redux/contacts/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nexport default function ContactForm() {\n  const inputIdName = useRef(uuidv4());\n  const inputIdNumber = useRef(uuidv4());\n  const [newName, setNewName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    if (newName.trim() === '' || number.trim() === '') {\n      toast.info('fill in all fields');\n      return;\n    }\n\n    if (\n      items.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\n    ) {\n      toast.error(newName + ' is already exist');\n      return;\n    }\n\n    dispatch(filterAction(''));\n    dispatch(contactsAction({ name: newName, number }));\n\n    toast.success('you have new contact');\n    setNewName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={style.Form} onSubmit={submitForm}>\n        <label htmlFor={inputIdName.current} className={style.Label}>\n          Name\n        </label>\n        <input\n          id={inputIdName.current}\n          className={style.Input}\n          type=\"text\"\n          name=\"name\"\n          value={newName}\n          onChange={e => setNewName(e.target.value)}\n        ></input>\n        <label htmlFor={inputIdNumber.current} className={style.Label}>\n          Number\n        </label>\n        <input\n          id={inputIdNumber.current}\n          className={style.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        ></input>\n        <div className={style.AddBtn}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add contact\n          </Button>\n        </div>\n      </form>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <ToastContainer />\n    </>\n  );\n}\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport { deleteActions } from '../../redux/contacts/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getContactsWithFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContactsWithFilter);\n  const dispatch = useDispatch();\n\n  const onDeleteElement = ({ id, name }) => {\n    toast.info(name + ' is deleted');\n    return dispatch(deleteActions(id));\n  };\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id}>\n          <div className={styles.Item}>\n            <p className={styles.Text}>\n              {name}: <span>{number}</span>\n            </p>\n            <button\n              type=\"button\"\n              className={styles.Button}\n              onClick={() => onDeleteElement({ id, name })}\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { filterAction } from '../../redux/contacts/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const inputId = React.useRef(uuidv4());\n  return (\n    <div className={styles.Item}>\n      <label className={styles.Label} htmlFor={inputId.current}>\n        Find contacts by name\n      </label>\n      <input\n        className={styles.Input}\n        id={inputId.current}\n        value={filter}\n        onChange={e => dispatch(filterAction(`${e.target.value.trim()}`))}\n      ></input>\n    </div>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <ToastContainer />\n    </div>\n  );\n}\n","export const initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n","import { combineReducers } from 'redux';\nimport { initialState } from '../initialState';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  contactsAction,\n  deleteActions,\n  filterAction,\n} from './contacts-actions';\n\nconst items = createReducer(initialState.contacts.items, {\n  [contactsAction]: (state, { payload }) => {\n    const newState = [...state, payload];\n\n    return newState;\n  },\n  [deleteActions]: (state, { payload }) => {\n    const newState = state.filter(contact => contact.id !== payload);\n\n    return newState;\n  },\n});\n\nconst filter = createReducer(initialState.contacts.filter, {\n  [filterAction]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n});\n","import { persistReducer } from 'redux-persist';\nimport { contactsReducer } from './contactsReducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'List',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const contactsPersistor = persistReducer(\n  contactsPersistConfig,\n  contactsReducer,\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore } from 'redux-persist';\nimport { contactsPersistor } from './contacts/contacts-persistor';\nimport { middleware } from './middleware';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsPersistor,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nexport const middleware = getDefaultMiddleware => {\n  if (process.env.NODE_ENV === `development`) {\n    const { logger } = require(`redux-logger`);\n\n    return [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n      logger,\n    ];\n  } else {\n    return [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n    ];\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}