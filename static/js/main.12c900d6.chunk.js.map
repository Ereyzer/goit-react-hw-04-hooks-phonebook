{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","service/helpers/localeStorage.js","components/App/App.js","service/helpers/filterTest.js","index.js"],"names":["module","exports","ContactForm","handleSubmit","inputIdName","useRef","uuidv4","inputIdNumber","useState","name","setName","number","setNumber","className","style","Form","onSubmit","e","preventDefault","trim","id","toast","info","htmlFor","current","Label","Input","type","value","onChange","target","AddBtn","Button","variant","color","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ContactList","contacts","deleteContact","map","styles","Item","Text","onClick","defaultProps","renderArr","Filter","filter","handleChange","inputId","React","addLocalStorage","newContacts","localStorage","setItem","JSON","stringify","App","setContacts","setFilter","test","slice","length","toLowerCase","testFunc","data","a","some","error","prevState","newState","success","useEffect","getItem","parse","delId","reduce","acc","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c900d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2gry8\",\"AddBtn\":\"ContactForm_AddBtn__QE609\",\"Item\":\"ContactForm_Item__2Zrte\",\"Label\":\"ContactForm_Label__1BLLN\",\"Input\":\"ContactForm_Input__7HF8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__1BoV6\",\"Item\":\"ContactList_Item__2kXdd\",\"Text\":\"ContactList_Text__8jNC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2S81K\",\"Input\":\"Filter_Input__2ZvHa\",\"Item\":\"Filter_Item__2z7du\"};","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport function ContactForm({handleSubmit}) {\r\n  const inputIdName = useRef(uuidv4());\r\n  const inputIdNumber = useRef(uuidv4());\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    if (name.trim() === '' || number.trim() === '') {\r\n      toast.info('fill in all fields');\r\n      return;\r\n    }\r\n    handleSubmit({ id: uuidv4(), ...{ name, number } });\r\n    setName('')\r\n    setNumber('');\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <form className={style.Form} onSubmit={submitForm}>\r\n          <label htmlFor={inputIdName.current} className={style.Label}>\r\n            Name\r\n          </label>\r\n          <input\r\n            id={inputIdName.current}\r\n            className={style.Input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n          ></input>\r\n          <label htmlFor={inputIdNumber.current} className={style.Label}>\r\n            Number\r\n          </label>\r\n          <input\r\n            id={inputIdNumber.current}\r\n            className={style.Input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={(e)=>setNumber(e.target.value)}\r\n          ></input>\r\n          <div className={style.AddBtn}>\r\n          <Button \r\n            type=\"submit\"\r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            >\r\n              Add contact\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function ContactList({contacts, deleteContact}) {\r\n    return (\r\n      <ul>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id}>\r\n            <div className={styles.Item}>\r\n              <p className={styles.Text}>\r\n                {name}: <span>{number}</span>\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.Button}\r\n                onClick={() => deleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  \r\n}\r\n\r\nContactList.defaultProps = {\r\n  renderArr: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  renderArr: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Filter({filter, handleChange}) {\r\nconst inputId = React.useRef(uuidv4())\r\n  return (\r\n      <div className={styles.Item}>\r\n        <label className={styles.Label} htmlFor={inputId.current}>\r\n          Find contacts by name\r\n        </label>\r\n        <input\r\n          className={styles.Input}\r\n          id={inputId.current}\r\n          value={filter}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};","export const addLocalStorage = (newContacts) =>\r\nlocalStorage.setItem('list', JSON.stringify(newContacts));\r\n","import './App.css';\r\nimport React,{useEffect, useState} from 'react';\r\nimport { ContactForm } from '../ContactForm/ContactForm';\r\nimport { ContactList } from '../ContactList/ContactList';\r\nimport { Filter } from '../Filter/Filter';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { addLocalStorage } from '../../service/helpers/localeStorage';\r\nimport { testFunc } from '../../service/helpers/filterTest';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n  const renderArr = findInFilter();\r\n\r\n  async function handleSubmit(data) {\r\n    const test = contacts.some(({ name }) => name === data.name);\r\n    if (test) {\r\n      toast.error(data.name + ' is already exist');\r\n      return;\r\n    }\r\n     setFilter(''); \r\n     setContacts(prevState => {\r\n       const newState = [...prevState, data];\r\n      addLocalStorage(newState);\r\n      return newState;\r\n    });\r\n    toast.success('you have new contact');  \r\n  };\r\n\r\n function findInFilter() {\r\n    if (filter === '') return contacts;\r\n    return contacts.filter(({ name }) => testFunc(filter, name))\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setFilter(value.trim());\r\n  };\r\n\r\n  const deleteContact = delId => {\r\n     setContacts(prevState => {\r\n      const newState = prevState.reduce(\r\n          (acc, contact) =>\r\n            contact.id !== delId ? [...acc, contact] : [...acc],[]);\r\n             addLocalStorage(newState);\r\n            return newState\r\n    });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.getItem('list') &&\r\n      setContacts(JSON.parse(localStorage.getItem('list')));\r\n  }, []);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm handleSubmit={handleSubmit} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter handleChange={handleChange} filter={filter} />\r\n        <ContactList contacts={renderArr} deleteContact={deleteContact} />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export function testFunc(filter, name) {\r\n  const test = name.slice(0, filter.length);\r\n  return filter.toLowerCase() === test.toLowerCase();\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App  from \"./components/App/App\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}