{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","service/helpers/localeStorage.js","components/App/App.js","service/helpers/filterTest.js","index.js"],"names":["module","exports","ContactForm","handleSubmit","inputIdName","useRef","uuidv4","inputIdNumber","useState","name","setName","number","setNumber","className","style","Form","onSubmit","e","preventDefault","trim","id","toast","info","htmlFor","current","Label","Input","type","value","onChange","target","AddBtn","Button","variant","color","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ContactList","contacts","deleteContact","map","styles","Item","Text","onClick","defaultProps","renderArr","Filter","filter","handleChange","inputId","React","addLocalStorage","newContacts","localStorage","setItem","JSON","stringify","App","setContacts","setFilter","test","slice","length","toLowerCase","testFunc","data","a","some","error","prevState","newState","success","useEffect","getItem","parse","delId","reduce","acc","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.574f5ef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2gry8\",\"AddBtn\":\"ContactForm_AddBtn__QE609\",\"Item\":\"ContactForm_Item__2Zrte\",\"Label\":\"ContactForm_Label__1BLLN\",\"Input\":\"ContactForm_Input__7HF8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__1BoV6\",\"Item\":\"ContactList_Item__2kXdd\",\"Text\":\"ContactList_Text__8jNC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2S81K\",\"Input\":\"Filter_Input__2ZvHa\",\"Item\":\"Filter_Item__2z7du\"};","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@material-ui/core/Button';\n\nexport function ContactForm({ handleSubmit }) {\n  const inputIdName = useRef(uuidv4());\n  const inputIdNumber = useRef(uuidv4());\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const submitForm = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      toast.info('fill in all fields');\n      return;\n    }\n    handleSubmit({ id: uuidv4(), ...{ name, number } });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={style.Form} onSubmit={submitForm}>\n        <label htmlFor={inputIdName.current} className={style.Label}>\n          Name\n        </label>\n        <input\n          id={inputIdName.current}\n          className={style.Input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        ></input>\n        <label htmlFor={inputIdNumber.current} className={style.Label}>\n          Number\n        </label>\n        <input\n          id={inputIdNumber.current}\n          className={style.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        ></input>\n        <div className={style.AddBtn}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add contact\n          </Button>\n        </div>\n      </form>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <ToastContainer />\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id}>\n          <div className={styles.Item}>\n            <p className={styles.Text}>\n              {name}: <span>{number}</span>\n            </p>\n            <button\n              type=\"button\"\n              className={styles.Button}\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.defaultProps = {\n  renderArr: [],\n};\n\nContactList.propTypes = {\n  renderArr: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport function Filter({ filter, handleChange }) {\n  const inputId = React.useRef(uuidv4());\n  return (\n    <div className={styles.Item}>\n      <label className={styles.Label} htmlFor={inputId.current}>\n        Find contacts by name\n      </label>\n      <input\n        className={styles.Input}\n        id={inputId.current}\n        value={filter}\n        onChange={handleChange}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","export const addLocalStorage = newContacts =>\n  localStorage.setItem('list', JSON.stringify(newContacts));\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addLocalStorage } from '../../service/helpers/localeStorage';\nimport { testFunc } from '../../service/helpers/filterTest';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const renderArr = findInFilter();\n\n  async function handleSubmit(data) {\n    const test = contacts.some(({ name }) => name === data.name);\n    if (test) {\n      toast.error(data.name + ' is already exist');\n      return;\n    }\n    setFilter('');\n    setContacts(prevState => {\n      const newState = [...prevState, data];\n      addLocalStorage(newState);\n      return newState;\n    });\n    toast.success('you have new contact');\n  }\n\n  function findInFilter() {\n    if (filter === '') return contacts;\n    return contacts.filter(({ name }) => testFunc(filter, name));\n  }\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setFilter(value.trim());\n  };\n\n  const deleteContact = delId => {\n    setContacts(prevState => {\n      const newState = prevState.reduce(\n        (acc, contact) => (contact.id !== delId ? [...acc, contact] : [...acc]),\n        [],\n      );\n      addLocalStorage(newState);\n      return newState;\n    });\n  };\n\n  useEffect(() => {\n    localStorage.getItem('list') &&\n      setContacts(JSON.parse(localStorage.getItem('list')));\n  }, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm handleSubmit={handleSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter handleChange={handleChange} filter={filter} />\n      <ContactList contacts={renderArr} deleteContact={deleteContact} />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","export function testFunc(filter, name) {\n  const test = name.slice(0, filter.length);\n  return filter.toLowerCase() === test.toLowerCase();\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}